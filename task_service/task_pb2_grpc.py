# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import task_pb2 as task__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in task_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class TaskServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetUserFolders = channel.unary_unary(
                '/task_service.TaskService/GetUserFolders',
                request_serializer=task__pb2.GetFoldersRequest.SerializeToString,
                response_deserializer=task__pb2.GetFoldersResponse.FromString,
                _registered_method=True)
        self.GetAllTasks = channel.unary_unary(
                '/task_service.TaskService/GetAllTasks',
                request_serializer=task__pb2.GetAllTasksRequest.SerializeToString,
                response_deserializer=task__pb2.GetAllTasksResponse.FromString,
                _registered_method=True)
        self.ToggleTaskCompletion = channel.unary_unary(
                '/task_service.TaskService/ToggleTaskCompletion',
                request_serializer=task__pb2.ToggleTaskRequest.SerializeToString,
                response_deserializer=task__pb2.TaskResponse.FromString,
                _registered_method=True)
        self.MoveTaskToFolder = channel.unary_unary(
                '/task_service.TaskService/MoveTaskToFolder',
                request_serializer=task__pb2.MoveTaskRequest.SerializeToString,
                response_deserializer=task__pb2.TaskResponse.FromString,
                _registered_method=True)
        self.SearchTasks = channel.unary_unary(
                '/task_service.TaskService/SearchTasks',
                request_serializer=task__pb2.SearchTasksRequest.SerializeToString,
                response_deserializer=task__pb2.SearchTasksResponse.FromString,
                _registered_method=True)
        self.CreateFolder = channel.unary_unary(
                '/task_service.TaskService/CreateFolder',
                request_serializer=task__pb2.CreateFolderRequest.SerializeToString,
                response_deserializer=task__pb2.CreateFolderResponse.FromString,
                _registered_method=True)
        self.UpdateFolder = channel.unary_unary(
                '/task_service.TaskService/UpdateFolder',
                request_serializer=task__pb2.UpdateFolderRequest.SerializeToString,
                response_deserializer=task__pb2.UpdateFolderResponse.FromString,
                _registered_method=True)
        self.GetFolder = channel.unary_unary(
                '/task_service.TaskService/GetFolder',
                request_serializer=task__pb2.GetFolderRequest.SerializeToString,
                response_deserializer=task__pb2.GetFolderResponse.FromString,
                _registered_method=True)
        self.DeleteFolder = channel.unary_unary(
                '/task_service.TaskService/DeleteFolder',
                request_serializer=task__pb2.DeleteFolderRequest.SerializeToString,
                response_deserializer=task__pb2.DeleteFolderResponse.FromString,
                _registered_method=True)
        self.CreateTask = channel.unary_unary(
                '/task_service.TaskService/CreateTask',
                request_serializer=task__pb2.CreateTaskRequest.SerializeToString,
                response_deserializer=task__pb2.CreateTaskResponse.FromString,
                _registered_method=True)
        self.GetTask = channel.unary_unary(
                '/task_service.TaskService/GetTask',
                request_serializer=task__pb2.GetTaskRequest.SerializeToString,
                response_deserializer=task__pb2.GetTaskResponse.FromString,
                _registered_method=True)
        self.UpdateTask = channel.unary_unary(
                '/task_service.TaskService/UpdateTask',
                request_serializer=task__pb2.UpdateTaskRequest.SerializeToString,
                response_deserializer=task__pb2.UpdateTaskResponse.FromString,
                _registered_method=True)
        self.DeleteTask = channel.unary_unary(
                '/task_service.TaskService/DeleteTask',
                request_serializer=task__pb2.DeleteTaskRequest.SerializeToString,
                response_deserializer=task__pb2.DeleteTaskResponse.FromString,
                _registered_method=True)


class TaskServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetUserFolders(self, request, context):
        """Global methods
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ToggleTaskCompletion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MoveTaskToFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SearchTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateFolder(self, request, context):
        """Folder operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteFolder(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTask(self, request, context):
        """Task operations
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TaskServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetUserFolders': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserFolders,
                    request_deserializer=task__pb2.GetFoldersRequest.FromString,
                    response_serializer=task__pb2.GetFoldersResponse.SerializeToString,
            ),
            'GetAllTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllTasks,
                    request_deserializer=task__pb2.GetAllTasksRequest.FromString,
                    response_serializer=task__pb2.GetAllTasksResponse.SerializeToString,
            ),
            'ToggleTaskCompletion': grpc.unary_unary_rpc_method_handler(
                    servicer.ToggleTaskCompletion,
                    request_deserializer=task__pb2.ToggleTaskRequest.FromString,
                    response_serializer=task__pb2.TaskResponse.SerializeToString,
            ),
            'MoveTaskToFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.MoveTaskToFolder,
                    request_deserializer=task__pb2.MoveTaskRequest.FromString,
                    response_serializer=task__pb2.TaskResponse.SerializeToString,
            ),
            'SearchTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.SearchTasks,
                    request_deserializer=task__pb2.SearchTasksRequest.FromString,
                    response_serializer=task__pb2.SearchTasksResponse.SerializeToString,
            ),
            'CreateFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateFolder,
                    request_deserializer=task__pb2.CreateFolderRequest.FromString,
                    response_serializer=task__pb2.CreateFolderResponse.SerializeToString,
            ),
            'UpdateFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateFolder,
                    request_deserializer=task__pb2.UpdateFolderRequest.FromString,
                    response_serializer=task__pb2.UpdateFolderResponse.SerializeToString,
            ),
            'GetFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFolder,
                    request_deserializer=task__pb2.GetFolderRequest.FromString,
                    response_serializer=task__pb2.GetFolderResponse.SerializeToString,
            ),
            'DeleteFolder': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteFolder,
                    request_deserializer=task__pb2.DeleteFolderRequest.FromString,
                    response_serializer=task__pb2.DeleteFolderResponse.SerializeToString,
            ),
            'CreateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTask,
                    request_deserializer=task__pb2.CreateTaskRequest.FromString,
                    response_serializer=task__pb2.CreateTaskResponse.SerializeToString,
            ),
            'GetTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTask,
                    request_deserializer=task__pb2.GetTaskRequest.FromString,
                    response_serializer=task__pb2.GetTaskResponse.SerializeToString,
            ),
            'UpdateTask': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTask,
                    request_deserializer=task__pb2.UpdateTaskRequest.FromString,
                    response_serializer=task__pb2.UpdateTaskResponse.SerializeToString,
            ),
            'DeleteTask': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTask,
                    request_deserializer=task__pb2.DeleteTaskRequest.FromString,
                    response_serializer=task__pb2.DeleteTaskResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'task_service.TaskService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('task_service.TaskService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TaskService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetUserFolders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/GetUserFolders',
            task__pb2.GetFoldersRequest.SerializeToString,
            task__pb2.GetFoldersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/GetAllTasks',
            task__pb2.GetAllTasksRequest.SerializeToString,
            task__pb2.GetAllTasksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ToggleTaskCompletion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/ToggleTaskCompletion',
            task__pb2.ToggleTaskRequest.SerializeToString,
            task__pb2.TaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def MoveTaskToFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/MoveTaskToFolder',
            task__pb2.MoveTaskRequest.SerializeToString,
            task__pb2.TaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SearchTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/SearchTasks',
            task__pb2.SearchTasksRequest.SerializeToString,
            task__pb2.SearchTasksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/CreateFolder',
            task__pb2.CreateFolderRequest.SerializeToString,
            task__pb2.CreateFolderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/UpdateFolder',
            task__pb2.UpdateFolderRequest.SerializeToString,
            task__pb2.UpdateFolderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/GetFolder',
            task__pb2.GetFolderRequest.SerializeToString,
            task__pb2.GetFolderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteFolder(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/DeleteFolder',
            task__pb2.DeleteFolderRequest.SerializeToString,
            task__pb2.DeleteFolderResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/CreateTask',
            task__pb2.CreateTaskRequest.SerializeToString,
            task__pb2.CreateTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/GetTask',
            task__pb2.GetTaskRequest.SerializeToString,
            task__pb2.GetTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/UpdateTask',
            task__pb2.UpdateTaskRequest.SerializeToString,
            task__pb2.UpdateTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/task_service.TaskService/DeleteTask',
            task__pb2.DeleteTaskRequest.SerializeToString,
            task__pb2.DeleteTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
