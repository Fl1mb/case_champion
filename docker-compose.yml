services:
  database:
    image: postgres:17.4
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER : admin
      POSTGRES_PASSWORD : admin
      POSTGRES_DB : database
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --locale=en_US.UTF-8"
      POSTGRES_HOST_AUTH_METHOD : trust
    volumes:
      - postgres_data:/var/lib/postgresql/database
    networks:
      - postgres_network

  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    environment:
      DATA_SOURCE_NAME: "postgresql://admin:admin@database:5432/database?sslmode=disable"
    ports:
      - "9187:9187"
    depends_on:
      - database
    networks:
      - postgres_network

  redis_exporter:
    image: oliver006/redis_exporter
    environment:
      REDIS_ADDR: "cache:6379"
      REDIS_PASSWORD: "admin"
    ports:
      - "9121:9121"
    depends_on:
      - cache
    networks:
      - redis_network
  blackbox:
    image: prom/blackbox-exporter
    ports:
      - "9115:9115"
    volumes:
      - ./blackbox:/config
    command:
      - '--config.file=/config/blackbox.yml'  
    networks:
      - postgres_network
      - redis_network

  api_service:
    build:
      context: ./api_service
      dockerfile: Dockerfile
    ports:
      - "3723:3723"
      - "8051:8051"
    networks:
      - postgres_network
      - redis_network
    depends_on:
      - user_service
      - task_service
  user_service:
    build: 
      context: ./user_service
      dockerfile: Dockerfile
    ports:
      - ":50051"
      - "8053:8053"
    networks:
      - postgres_network
    depends_on:
      - database
  task_service:
    build: 
      context: ./task_service
      dockerfile: Dockerfile
    ports:
      - ":50052"
      - ":8054"
    networks:
      - postgres_network
    depends_on:
      - database

  cache_service:
    build: 
      context: ./cache_service
      dockerfile: Dockerfile
    ports:
      - ":50053"
      - ":8052"
    networks:
      - redis_network
    depends_on:
      - cache  
  cache:
    image: redis:latest
    container_name: cache_container
    ports:
      - ":6379"
    volumes:
      - redis_data:/data
    networks:
      - redis_network
    environment:
      - REDIS_PASSWORD=admin
    command: redis-server --requirepass admin

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      - postgres_network
      - redis_network
  
  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    networks:
      - postgres_network
      - redis_network
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning:z
      - grafana_data:/var/lib/grafana

volumes:
  postgres_data:
  grafana_data:
  redis_data:
  prom_data:
  

networks:
  postgres_network:
    driver: bridge
  redis_network:
    driver: bridge